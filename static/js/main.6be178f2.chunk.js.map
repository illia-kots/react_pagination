{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","pages","Math","ceil","disabledNextButton","length","disabledPrevButton","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","selectedItems","setSelectedItems","setCurrentPage","startItems","endItems","visibleItems","id","value","onChange","event","target","selectedItem","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"kNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAQZ,EAAW,EADRa,KAAKC,KAAKN,EAAQC,IAE7BM,EAAqBL,IAAgBE,EAAMI,OAC3CC,EAAqC,IAAhBP,EAQ3B,OACE,qBAAIQ,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,CACpB,aAAa,EACbC,SAAUH,IAHd,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAhBiB,kBAAMZ,EAAc,GACxCC,EAAaD,EAAc,IAU1B,oBAWDE,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,CACpB,aAAa,EACbM,OAAQD,IAASd,IAJrB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAZEA,MAiBT,oBACEN,UAAWC,IAAW,CACpB,aAAa,EACbC,SAAUL,IAHd,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAvDiB,kBAAMZ,EAAcE,EAAMI,QAC9CL,EAAaD,EAAc,IAiD1B,wBCpEFgB,EAAQ1B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,IAGA,EAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBqB,EAApB,KAEMC,EAAa,GAAKtB,EAAc,GAAKmB,EACrCI,EAAWvB,EAAcmB,EAPjB,MASVnB,EAAcmB,EAEZK,EAAY,YAAOR,GAYzB,OACE,sBAAKR,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EADjC,cACiDC,EADjD,eA3BU,GA2BV,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOP,EACPQ,SAxBiB,SAACC,GAC1BR,GAAkBQ,EAAMC,OAAOH,OAC/BL,EAAe,IAiBT,SAhCc,CAAC,IAAK,IAAK,KAAM,MAuCdR,KAAI,SAACiB,GAAD,OACjB,wBACEJ,MAAOI,EADT,SAIGA,GAFIA,UAQb,uBAAOC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAzDQ,GA0DRC,QAASoB,EACTnB,YAAaA,EACbC,aAzCmB,SAACa,GACxBO,EAAeP,MA2Cb,6BAnD0BU,EAAaQ,MAAMV,EAAa,EAAGC,GAoDxCV,KAAI,SAAAoB,GAAI,OACzB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCxEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6be178f2.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n  const maxPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, maxPages);\n  const disabledNextButton = currentPage === pages.length;\n  const disabledPrevButton = currentPage === 1;\n\n  const handleNextButton = () => currentPage < pages.length\n    && onPageChange(currentPage + 1);\n\n  const handlePrevButton = () => currentPage > 1\n    && onPageChange(currentPage - 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames({\n          'page-item': true,\n          disabled: disabledPrevButton,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={disabledPrevButton}\n          onClick={handlePrevButton}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames({\n            'page-item': true,\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames({\n          'page-item': true,\n          disabled: disabledNextButton,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={disabledNextButton}\n          onClick={handleNextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const numberOfItems = ['3', '5', '10', '20'];\n\n  const [selectedItems, setSelectedItems] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startItems = 1 + (currentPage - 1) * selectedItems;\n  const endItems = currentPage * selectedItems > total\n    ? total\n    : currentPage * selectedItems;\n\n  const visibleItems = [...items];\n  const getVisibleItems = () => visibleItems.slice(startItems - 1, endItems);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedItems(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handleChangePage = (page: number): void => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItems} - ${endItems} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectedItems}\n            onChange={handleSelectChange}\n          >\n            {numberOfItems.map((selectedItem: string) => (\n              <option\n                value={selectedItem}\n                key={selectedItem}\n              >\n                {selectedItem}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={selectedItems}\n        currentPage={currentPage}\n        onPageChange={handleChangePage}\n      />\n\n      <ul>\n        {getVisibleItems().map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}